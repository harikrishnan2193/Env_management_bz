<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Sidebar Example</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
      integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
      integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link href="/css/tailwind.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Add jQuery -->
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"
      integrity="sha512-VEd+nq25CkR676O+pLBnDW09R7VQX9Mdiij052gVCp5yVH3jGtH70Ho/UUv4mJDsEdTvqRCFZg0NKGiojGnUCw=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    ></script>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.css"
      integrity="sha512-3pIirOrwegjM6erE5gPSwkUzO+3cTjpnV9lexlNZqvupR64iZBnOOTiiLPb9M36zpMScbmUNIcHUqKD47M719g=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />

    <style>
      @media (max-width: 1535px) {
        #sidebar {
          background: #0f2027; /* fallback for old browsers */
          background: -webkit-linear-gradient(
            to right,
            #2c5364,
            #203a43,
            #0f2027
          ); /* Chrome 10-25, Safari 5.1-6 */
          background: linear-gradient(to right, #2c5364, #203a43, #0f2027);
        }
      }
    </style>
  </head>

  <body class="">
    <!-- Burger Menu Button -->
    <% if (typeof roleDetails !=='undefined' &&
    (roleDetails.role_scope==='organization' ||
    (roleDetails.role_name==='project_admin' &&
    roleDetails.role_scope==='project' ))) { %>
    <div class="fixed top-4 left-4 z-50">
      <button id="toggleMenu" class="text-white p-2 rounded focus:outline-none">
        <span id="burgerIcon" class="block"
          ><i class="fa fa-bars fa-lg"></i
        ></span>
        <span id="closeIcon" class="hidden"
          ><i class="fa-solid fa-x fa-lg"></i
        ></span>
      </button>
    </div>
    <% } %>

    <!-- Sidebar -->
    <div
      id="sidebar"
      class="fixed top-0 left-0 h-full w-72 text-white transform -translate-x-full transition-transform duration-300 z-20 2xl:bg-transparent"
    >
      <!-- Users Content -->
      <div class="p-4">
        <div class="border rounded-lg shadow w-full mx-auto mt-20">
          <h3
            class="w-full px-4 py-2 text-left text-lg font-medium flex justify-between"
          >
            Users
          </h3>

          <div
            id="accordionContent"
            class="hidden border-t overflow-hidden transition-[max-height] duration-500 ease-in-out"
            style="max-height: 0"
          >
            <ul id="userList" class="px-4 py-2">
              <!-- List items -->
            </ul>
          </div>
        </div>
      </div>
    </div>

    <script>
      const toggleMenuButton = document.getElementById("toggleMenu");
      const sidebar = document.getElementById("sidebar");
      const burgerIcon = document.getElementById("burgerIcon");
      const closeIcon = document.getElementById("closeIcon");

      toggleMenuButton.addEventListener("click", () => {
        sidebar.classList.toggle("-translate-x-full");

        burgerIcon.classList.toggle("hidden");
        closeIcon.classList.toggle("hidden");
      });

      // Function to fetch data
      async function fetchAssociatedUsers() {
        try {
          const response = await fetch("/users/associated");

          if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
          }

          const data = await response.json();

          // console.log("Associated Users:", data);

          if (data.success && data.data.length > 0) {
            // response data
            const users = data.data;

            // reference the UL inside the #accordionContent div
            const userList = document.querySelector("#accordionContent ul");

            userList.innerHTML = "";

            // Populate the list with fetched data
            users.forEach((user) => {
              const listItem = document.createElement("li");
              listItem.classList.add(
                "py-3",
                "flex",
                "flex-col",
                "items-start",
                "space-y-2"
              );

              // create the content HTML without the trash button initially
              let contentHTML = `
                  <span class="font-semibold">${user.username}</span>  
                  <p class="text-sm text-gray-500">${user.role_name}</p>
                `;

              // conditionally render the trash button based on the user's role
              if (user.role_name !== "project_admin") {
                contentHTML += `
                    <span class="ml-auto"> 
                    <button
                      class="text-red-500 delete-button"
                      data-user-id="${user.user_id}"
                    >
                      <i class="fa-solid fa-trash"></i>
                    </button>
                    </span>
                  `;
              }

              // Set the innerHTML of the listItem
              listItem.innerHTML = contentHTML;

              // attach delete functionality to the button
              const deleteButton = listItem.querySelector(".delete-button");
              if (deleteButton) {
                deleteButton.addEventListener("click", async (event) => {
                  const userId = event.target
                    .closest("button")
                    .getAttribute("data-user-id");

                  try {
                    const response = await fetch(`/users/delete/${userId}`, {
                      method: "DELETE",
                    });
                    if (!response.ok)
                      throw new Error(`HTTP error! Status: ${response.status}`);
                    alert("User successfully deleted!");
                    listItem.remove(); // remove the user from the DOM
                  } catch (error) {
                    console.error("Error deleting user:", error);
                    alert("Error deleting user.");
                  }
                });
              }

              // ensure the userList element exists and then append the item
              const userList = document.getElementById("userList");
              if (userList) {
                userList.appendChild(listItem);
              } else {
                console.error("userList element not found!");
              }
            });

            // make accordion visible
            const accordionContent =
              document.querySelector("#accordionContent");
            accordionContent.classList.remove("hidden");
            accordionContent.style.maxHeight = `${accordionContent.scrollHeight}px`;
          } else {
            console.log("No associated users found.");
          }
        } catch (error) {
          console.error("Error fetching associated users:", error);
        }
      }

      // Call the function when the page loads
      window.onload = fetchAssociatedUsers;
    </script>
  </body>
</html>
